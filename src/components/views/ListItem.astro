---
import Link from '~/components/base/Link.astro'

import { formatDate } from '~/utils/datetime'
import { withBasePath } from '~/utils/path'

interface Props {
  idx: number
  collectionType: string
  redirect?: string
  postSlug?: string
  title: string
  video?: boolean
  radio?: boolean
  date: string | Date
  minutesRead?: number
  platform?: string
}

const { idx, redirect, collectionType, postSlug, title, video, radio, date, minutesRead, platform } = Astro.props
---

<div class="slide-enter" style={{ '--enter-stage': idx }}>
  <Link
    u-flex="~ items-center lt-md:(col items-start) gap-2"
    class="mb-6 mt-2 border-b-none! op-transition!"
    href={redirect ?? withBasePath(`/${collectionType}/${postSlug}/`)}
    external={!!redirect}
    enableNewTabWarning={!!redirect}
  >
    <Fragment slot="title">{title}</Fragment>
    <span slot="end" u-flex="~ gap-2 items-center">
      {
        video && (
          <span
            u-i-ri-film-line
            class="flex-none align-middle op-50"
            title="Provided in video"
            aria-label="Provided in video"
          />
        )
      }
      {
        radio && (
          <span
            u-i-ri-radio-line
            class="flex-none align-middle op-50"
            title="Provided in radio"
            aria-label="Provided in radio"
          />
        )
      }
      <time class="ws-nowrap text-sm op-50" datetime={new Date(date).toISOString()}>
        {formatDate(date, false)}
      </time>
      {
        typeof minutesRead === 'number' && minutesRead > 0 && (
          <span class="ws-nowrap text-sm op-40">· {minutesRead} min</span>
        )
      }
      {platform && <span class="ws-nowrap text-sm op-40">· {platform}</span>}
    </span>
  </Link>
</div>
